//Cameron Stepanski
//April 24, 2020
//CS1428 Lab
//Lab 10
//Description: this program will apply a curve to 5 grades

#include <iostream>
#include <iomanip>
using namespace std;

double getAverage(double g[], const int SIZE)
{
    double total = 0;

    for(int i = 0; i < SIZE; i++)
    {
        total += g[i];
    }

    return total/SIZE;
}

void applyCurve(double g[], const int SIZE, double curve)
{
    for(int i = 0; i < SIZE; i++)
    {
        g[i] += curve;
    }
}

// TODO: Complete the function definitions

void findCurveInfo(double grades[], const int SIZE, int &highest, double &curve)
{
    highest = 0;

    for(int i = 1; i < SIZE; i++)
    {
        if(grades[i] > grades[highest])
            highest = i;
    }

    curve = (100 - grades[highest])/2;
}

void printData(double grades[], const int SIZE, int highest, double average,
               double curve)
{
    cout << "Grades after the curve:" << endl;

    for(int i = 0; i < SIZE; i++)
    {
        cout << grades[i] << endl;
    }

    cout << "Average after the curve: " << average << endl;

    cout << "Highest grade after curve: " << grades[highest] << endl;

    cout << "Curve amount applied: " << curve;
}
int main()
{
    const int SIZE = 5;
    int highest;
    double average,
           curve,
           grades[SIZE];

    cout << "Enter " << SIZE << " grades: " << endl;
    for(int i = 0; i < SIZE; i++)
    {
        cin >> grades[i];
    }

    // TODO: Add function calls

    findCurveInfo(grades,SIZE,highest,curve);

    applyCurve(grades,SIZE,curve);

    average = getAverage(grades,SIZE);

    printData(grades, SIZE, highest, average, curve);
    return 0;
}
